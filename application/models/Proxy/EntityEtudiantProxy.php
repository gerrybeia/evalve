<?php

namespace Proxy;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class EntityEtudiantProxy extends \Entity\Etudiant implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getEmail()
    {
        $this->__load();
        return parent::getEmail();
    }

    public function setEmail($email)
    {
        $this->__load();
        return parent::setEmail($email);
    }

    public function getNom()
    {
        $this->__load();
        return parent::getNom();
    }

    public function setNom($nom)
    {
        $this->__load();
        return parent::setNom($nom);
    }

    public function getPrenom()
    {
        $this->__load();
        return parent::getPrenom();
    }

    public function setPrenom($prenom)
    {
        $this->__load();
        return parent::setPrenom($prenom);
    }

    public function getCode()
    {
        $this->__load();
        return parent::getCode();
    }

    public function setCode($code)
    {
        $this->__load();
        return parent::setCode($code);
    }

    public function getEtablissement()
    {
        $this->__load();
        return parent::getEtablissement();
    }

    public function setEtablissement(\Entity\Etablissement $etablissement)
    {
        $this->__load();
        return parent::setEtablissement($etablissement);
    }

    public function getFaculte()
    {
        $this->__load();
        return parent::getFaculte();
    }

    public function setFaculte(\Entity\Faculte $faculte)
    {
        $this->__load();
        return parent::setFaculte($faculte);
    }

    public function getPromotion()
    {
        $this->__load();
        return parent::getPromotion();
    }

    public function setPromotion(\Entity\Promotion $promotion)
    {
        $this->__load();
        return parent::setPromotion($promotion);
    }

    public function getAnnee()
    {
        $this->__load();
        return parent::getAnnee();
    }

    public function setAnnee(\Entity\Annee $annee)
    {
        $this->__load();
        return parent::setAnnee($annee);
    }

    public function getAbonnements()
    {
        $this->__load();
        return parent::getAbonnements();
    }

    public function setAbonnements(\Doctrine\Common\Collections\ArrayCollection $abonnements)
    {
        $this->__load();
        return parent::setAbonnements($abonnements);
    }

    public function addToAbonnements(\Entity\Abonnement $abonnement)
    {
        $this->__load();
        return parent::addToAbonnements($abonnement);
    }

    public function removeFromAbonnements(\Entity\Abonnement $abonnement)
    {
        $this->__load();
        return parent::removeFromAbonnements($abonnement);
    }

    public function isMemberOfAbonnements(\Entity\Abonnement $abonnement)
    {
        $this->__load();
        return parent::isMemberOfAbonnements($abonnement);
    }

    public function getNumeros()
    {
        $this->__load();
        return parent::getNumeros();
    }

    public function setNumeros(\Doctrine\Common\Collections\ArrayCollection $numeros)
    {
        $this->__load();
        return parent::setNumeros($numeros);
    }

    public function addToNumeros(\Entity\Numero $numero)
    {
        $this->__load();
        return parent::addToNumeros($numero);
    }

    public function removeFromNumeros(\Entity\Numero $numero)
    {
        $this->__load();
        return parent::removeFromNumeros($numero);
    }

    public function isMemberOfNumeros(\Entity\Numero $numero)
    {
        $this->__load();
        return parent::isMemberOfNumeros($numero);
    }

    public function getDemandes()
    {
        $this->__load();
        return parent::getDemandes();
    }

    public function setDemandes(\Doctrine\Common\Collections\ArrayCollection $demandes)
    {
        $this->__load();
        return parent::setDemandes($demandes);
    }

    public function addToDemandes(\Entity\Demande $demande)
    {
        $this->__load();
        return parent::addToDemandes($demande);
    }

    public function removeFromDemandes(\Entity\Demande $demande)
    {
        $this->__load();
        return parent::removeFromDemandes($demande);
    }

    public function isMemberOfDemandes(\Entity\Demande $demande)
    {
        $this->__load();
        return parent::isMemberOfDemandes($demande);
    }

    public function getNotes()
    {
        $this->__load();
        return parent::getNotes();
    }

    public function setNotes(\Doctrine\Common\Collections\ArrayCollection $notes)
    {
        $this->__load();
        return parent::setNotes($notes);
    }

    public function addToNotes(\Entity\Note $note)
    {
        $this->__load();
        return parent::addToNotes($note);
    }

    public function removeFromNotes(\Entity\Note $note)
    {
        $this->__load();
        return parent::removeFromNotes($note);
    }

    public function isMemberOfNotes(\Entity\Note $note)
    {
        $this->__load();
        return parent::isMemberOfNotes($note);
    }

    public function getAnnonces()
    {
        $this->__load();
        return parent::getAnnonces();
    }

    public function setAnnonces(\Doctrine\Common\Collections\ArrayCollection $annonces)
    {
        $this->__load();
        return parent::setAnnonces($annonces);
    }

    public function addToAnnonces(\Entity\Annonce $annonce)
    {
        $this->__load();
        return parent::addToAnnonces($annonce);
    }

    public function removeFromAnnonces(\Entity\Annonce $annonce)
    {
        $this->__load();
        return parent::removeFromAnnonces($annonce);
    }

    public function isMemberOfAnnonces(\Entity\Annonce $annonce)
    {
        $this->__load();
        return parent::isMemberOfAnnonces($annonce);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'email', 'nom', 'prenom', 'code', 'etablissement', 'faculte', 'promotion', 'annee', 'abonnements', 'numeros', 'demandes', 'notes', 'annonces');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}